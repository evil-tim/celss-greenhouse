// Part Configuration - Greenhouse

// By: Alistair J. R. Young, May 2014

PART
{
    // General parameters
    name = Agricultural Greenhouse
    module = Part
    author = Alistair J. R. Young
    
    // Asset parameters
    mesh = model.mu
    scale = 1
    rescaleFactor = 1.875
    
    // Node definitions
    node_stack_top = 0.0, 1.61, 0.0, 0.0, 1.0, 0.0, 3
    node_stack_bottom = 0.0, -1.61, 0.0, 0.0, 1.0, 0.0, 3
    node_attach = 1.25, 0.0, 0.0, 1.0, 0.0, 0.0, 1

    // Editor parameters
    TechRequired = veryHeavyRocketry
    
    cost = 9500
    category = Utility
    subcategory = 0
    title = Agricultural Greenhouse
    manufacturer = Lacuna Space Systems, Inc.
    
    description = This module is a large agricultural greenhouse capable of producing food and other life support resources for six kerbals for extended periods of time by using a living ecosystem to recycle life-support waste products with 90% efficiency.
    
    // attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
    attachRules = 1,1,1,1,0
    
    // Standard part parameters
    mass = 27
    dragModelType = default
    maximum_drag = 0.2
    minimum_drag = 0.3
    angularDrag = 2
    crashTolerance = 6
    breakingForce = 200
    breakingTorque = 200
    maxTemp = 2900
    fuelCrossFeed = true
        
    
    // Resource Converters
    // These only include the BASE LOAD power usage at this time.
    
    MODULE
    {
        name = LacunaGreenhouseConverter
        
        ShutterAnimationName = door
        
        // Number of units to convert per kerbin day (6H).
        ConversionRate = 6

        // A comma separated list of resources to use as inputs in each mode.
        // For each resource, list the resource name and the amount (which
        // is multiplied by the conversionRate)
        CelssInputResources = CarbonDioxide, 28.773705791902, WasteWater, 0.276975, Waste, 0.029925, ElectricCharge, 475200
        
        // A comma separated list of resources to output in each mode. Same as above
        // but also specify whether it should keep converting if the
        // resource is full (generating excess that will be thrown away).
        CelssOutputResources = Oxygen, 33.311170212766, true, Water, 0.21749625, true, Food, 0.3290625, true
    }
}	